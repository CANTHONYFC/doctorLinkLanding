import { Auditory } from "../models/auditory.model";

export class Activity extends Auditory {
    id?: number;
    typeDocument?: string;
    companyCode?: string;
    documentCode?: string;
    activityCode?: string;
    activity?: string;
    moreData?: string;
}
export interface BaseDataDocument {
    createDate: string;
    updateDate: string;
    status: string;
    companyCode: string;
    id: string;
    businessPartnerCode: string;
    businessPartnerName: string;
    businessPartner: string;
    docDate: string;
    transactionalCode: string;
    comment: string;
    subtotal: number;
    discountPercentage: number;
    discount: number;
    taxAmount: number;
    total: number;
    docCurrency: string;
    paymentReceiptType: string;
    emailSalePerson: string;
    nameSalePerson: string;
    salesPersonCode: number;
    nif: string;
    payAddressName: string;
    docYear: number;
    docNum: number;
    paymentConditionName: string;
    approvalForMaxDiscount: string;
    totalWeight: number;
    amountLetter: string;
    cashRegisterCode: string;
    paymentCondition: string;
    paymentType: string;
    tentativeSchedule: string;
    totalExonerated: number;
    paymentConditionGroupNumber: number;
    totalAffection: number;
    rate: number;
    rateDay: number;
    priceListSeller: number;
    numberOfAdditionalDays: number;
    numberOfAdditionalMonths: number;
    isExportInvoice: string;
    statusOperation: string;
    grossPrice: number;
    createUserDocument: string;
    createUserCode: string;
    store: string;
    saleType: string;
    ndpClaDoc: string;
    isWorkerQuota: string;
    channelApp: string;
    detail: DocumentDetail[];
    samples: any[];
    pickUps: any[];
    documentInstallments: any[];
    reservationInvoice: string;
}

export interface DocumentDetail {
    createDate: string;
    status: string;
    id: string;
    numberLine: number;
    quantity: number;
    unitMSRCode: string;
    unitMSRName: string;
    itemCode: string;
    ubicationEntry: number;
    itemType: string;
    itemName: string;
    warehouseCode?: string;
    ubicationCode?: string;
    unitPrice: number;
    grossPrice: number;
    taxCode: string;
    tax: number;
    subtotal: number;
    discountPercentage: number;
    discount: number;
    total: number;
    sunatOperation: string;
    sunatOneroso: string;
    sunatAffectationType: string;
    currency: string;
    unitMSREntry: number;
    taxAmount: number;
    inventoryItem: string;
    onlyTax: string;
    unitGroupEntry: number;
    type: string;
    ubicationTo?: string;
    ubicationEntryTo: number;
    isGrossPrice: string;
    unitPriceBD: number;
    offerCode: string;
    offerApply: string;
    glosa: string;
    warehouseName?: string;
}
